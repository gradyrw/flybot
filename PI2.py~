import numpy as np
import matplotlib.pyplot as plt
from pylab import *
from random import gauss
from random import uniform
import pycuda.driver as cuda
import pycuda.autoinit
from pycuda.compiler import SourceModule
from pycuda.curandom import *
from pycuda import gpuarray
import time

"""
PI2 class for performing the PI2 algorithm in the context of tunnel navigation
 on a CUDA capable GPU. 

__init__(T, horiz_vel, gravity, obj_width, obj_height, obj_pos, tunnel_upr, tunnel_lwr)

-initializes a PI2 class where T is the number of timesteps to take, horiz_vel is the speed
at which we're moving, gravity is downward acceleration due to gravity, obj_width is the 
width of the object, obj_height is the height of the object, tunnel_upr an array containing
information for the upper part of the tunnel and similiarly for tunnel lower.

rollout(K, U)

-performs K rollouts of the system where U is the intial starting vector

calc_path(max = 2500)

-performs trials of the system until convergence, max is the maximum number of trials 
the program will perform until it gives up.
"""

def __init__(T, horiz_vel, gravity, obj_width, obj_height, init_pos, tunnel_upr, tunnel_lwr):
    x_init = init_pos[0]
    y_init = init_pos[1]
    self.T = T
    self.speed = horiz_vel
    self.gravity = gravity
    self.generator = XORWOWRandomNumberGenerator()
    end_goal = T*horiz_vel + x_init
    func1,U_d,upr,lwr = func1(T, obj_width, obj_height, init_pos[0], x_init, end_goal)
    cuda.memcpy_htod(upr, tunnel_upr)
    cuda.memcpy_htod(lwr, tunnel_lwr)
    funcs = func1, U_d, func2(T), func3(), func4()
